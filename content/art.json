{
  "entries": [
    {
      "slug": "dot-field",
      "title": {
        "en": "Dot Field",
        "ja": "Dot Field（ドットフィールド）"
      },
      "summary": {
        "en": "A deep dive into the homepage dot field — how each mode bends the grid and why the motion feels alive.",
        "ja": "ホームページのドットフィールドがなぜ生き物のように動くのか、モードごとの振る舞いを徹底解説。"
      },
      "content": {
        "en": "<h1>The Dot Field&#39;s Hidden Choreography</h1>\n<p>Imagine stepping into a planetarium where the constellations ignore the ceiling and instead orbit around you, whispering every tweak in gravity through graceful motion. It’s equal parts murmuration of starlings and midnight fountain show, and that’s the feeling the homepage’s dot field aims to deliver. It is a performance that blends shader math, responsive choreography, and a surprising amount of empathy for the viewer—from the first pixel that fades in to the last ripple that bows out.</p>\n<h2>The Cast Behind the Curtain</h2>\n<ul>\n<li><strong>SceneCanvas</strong> (<code>components/SceneCanvas.jsx</code>) is the stage manager and lighting designer rolled into one. It creates a 70 × 70 lattice of points (4,900 total) spaced 90 units apart, then hands their motion to a custom <code>THREE.Points</code> shader. Each dot draws itself as a soft disc using <code>gl_PointCoord</code>, additive blending, and uniforms for brightness and size so the field gleams without hard edges.</li>\n<li><strong>FIELD_DEFAULT_BASE</strong> (<code>lib/fieldDefaults.js</code>) establishes the “house band” settings: wave frequencies, ripple decay, swirl strength, point size, fog density, and more. These values are the baseline mood the animation eases back to whenever an effect finishes.</li>\n<li><strong>FIELD_DEFAULT_INFLUENCES</strong> tweaks that baseline per channel. Navigating to <code>/projects</code> or <code>/sounds</code> doesn’t swap the animation wholesale; it simply nudges parameters so the grid feels tailored to the content.</li>\n<li><strong>SceneCanvas` state machine</strong> keeps track of pointer energy, queued ripples, mode-specific data, and even mobile vs. desktop camera profiles. Think of it as a conductor’s score that knows which section should come in next, or a theme park ride manual that ensures every seat belts in at the right moment.</li>\n</ul>\n<h2>How the Motion Flows</h2>\n<p>At its core, the dot field layers three sinusoids: one that marches along the X axis, another offset along Y, and a radial swirl that wraps the grid into gentle spirals. This base motion gives the field a tide-like cadence—part ocean swell, part breathing dragon. On top of that:</p>\n<ul>\n<li>Pointer movement is translated into “world” coordinates and stored with a live energy meter. Sudden moves spike the energy; inactivity lets it decay (<code>pointer.energy = pointer.energy * 0.92 - 0.002</code>), so the dots never lurch when you stop interacting. It’s the same feedback loop you feel on a well-tuned skateboard where momentum rewards gentle carving.</li>\n<li>Clicks enqueue ripples that expand outward with exponential falloff. Each ripple tracks its age, distance, and strength, then fades after eight seconds—like dropping a pebble into an infinite koi pond and watching the rings dissolve, or striking a gong and hearing the shimmer soften into silence.</li>\n<li>The camera orbits on a subtle autopilot and lerps toward pointer offsets. Instead of an instant jump, it glides with coefficients around <code>0.04–0.045</code>, echoing the way a steadicam operator anticipates the next beat or a hot-air balloon drifts toward a new thermal.</li>\n</ul>\n<h2>Effect Library: Nine Alternate Universes</h2>\n<p>The animation stores a library of effect definitions—Zen, Jitter, Reaction Diffusion, Starfield, Harmonic Pendulum, Mandelbrot Zoom, and more. Triggering an effect executes four passages:</p>\n<ol>\n<li><strong>init</strong> seeds per-effect memory (double pendulum angles, Gray-Scott buffers, etc.).</li>\n<li><strong>start</strong> retunes the global settings (brightness, amplitude, ripple behaviour).</li>\n<li><strong>update</strong> evolves the custom state frame to frame.</li>\n<li><strong>perPoint</strong> injects per-particle offsets, scales, and lighting.</li>\n</ol>\n<p>Each effect is like inviting a guest conductor to reinterpret the score, or letting a guest chef borrow the kitchen for a one-night tasting menu. The Harmonic Pendulum mode sums the influence of three real-time double pendulums for chaotic waves. River Run steers sine currents diagonally while layering fractal noise to conjure eddies. Starfield lifts the dots into a faux z-axis, interpolating twinkle phases so the grid dissolves into a nebula before gracefully landing. Even Mandelbrot Zoom computes 32 iterations per point, letting the dots map the fractal boundary as they breathe in and out like accordion bellows.</p>\n<h2>The Secret Sauce of Smoothness</h2>\n<p>Smoothness here comes from a stack of easing decisions:</p>\n<ul>\n<li><strong>Target vs. live settings.</strong> Rather than flipping values instantly, the animation walks every property toward its target with <code>settings[key] += (targetSettings[key] - settings[key]) * 0.05</code>. The result is a mellow glide anytime a mode or menu influence shifts the parameters—think of dimming the lights with a slider instead of a switch.</li>\n<li><strong>Envelope functions everywhere.</strong> Effects lean on <code>smoothStep</code> and custom <code>computeEffectEase</code> helpers for ramping in and out. Even fade-outs square the progress curve to keep endings soft, like a choir sustaining its final note until the room exhales.</li>\n<li><strong>Pointer damping.</strong> Energy builds quickly but bleeds away exponentially, so motion feels alive while dragging yet settles like sand the moment you pause.</li>\n<li><strong>Deferred effect clearing.</strong> When a timed effect ends, it triggers a 2.5-second fade where the per-point contributions shrink while the UI synchronizes its own transition. Nothing snaps off-stage.</li>\n<li><strong>Responsive camera profiles.</strong> Desktop and mobile have tailored orbits, and <code>matchMedia(&#39;(max-width: 640px)&#39;)</code> swaps profiles instantly when viewports change—no layout jolts when rotating a phone.</li>\n</ul>\n<p>Taken together, the animation feels more like a jazz quartet warming up than a deterministic loop. Transitions are phrases, not toggles.</p>\n<h2>Visual Polish and Reader Comfort</h2>\n<ul>\n<li>The shader discards fragments outside a quarter-radius circle, then applies a <code>smoothstep</code> falloff. That feathered edge is the difference between retro CRT glow and a blocky pixel artifact—more vinyl record warmth than bitcrushed MP3 fatigue.</li>\n<li>Colors stay grayscale, but contrast and brightness stretch dynamically with height. Dots closer to the crest grow larger and brighter, mimicking stage lights following a dancer.</li>\n<li>Additive blending plus Reinhard tone mapping pushes bright peaks without blowing out the midtones; it’s the visual equivalent of compressing a track so whispers and shouts coexist.</li>\n<li>Accessibility is baked in. The scene respects <code>prefers-reduced-motion</code>, jumping straight to a stable state with <code>requestAnimationFrame</code>-synced readiness to avoid flashes during load.</li>\n</ul>\n<h2>Picture Prompts</h2>\n<ul>\n<li>Snapshot the default grid from a high angle, annotating the X/Y wave layers like a topographic map, to show how sinusoids interleave.</li>\n<li>Capture a GIF of ripple propagation, overlaying concentric circles like a water droplet diagram.</li>\n<li>Render the effect menu as a “guest conductor” lineup poster, pairing each mode with its signature waveform icon.</li>\n<li>Split-screen a standard view and the <code>prefers-reduced-motion</code> fallback to illustrate the empathetic loading path.</li>\n</ul>\n<h2>Technical Tidbits Worth Sharing</h2>\n<ul>\n<li>The Perlin permutation table is precomputed into a 512-entry lookup. That noise powers flowing effects like River Run without allocating intermediate arrays every frame.</li>\n<li>Ripple queues cap at 20 entries to prevent runaway accumulation, and old ones are culled after eight seconds, keeping perf flat over long sessions.</li>\n<li>The grid is marked <code>frustumCulled = false</code> so the renderer keeps it alive even when the camera pushes deep into the orbit—no accidental pop-out at extreme angles.</li>\n<li>Stats.js hooks stay hidden unless toggled via admin controls, but they’re ready for experimentation when dialing new modes.</li>\n<li>The scene toggles a <code>.is-ready</code> class one frame after initialization (or immediately for reduced-motion users), letting CSS coordinate entrance animations with WebGL readiness.</li>\n</ul>\n<h2>Why It Feels So Good</h2>\n<p>The magic of the dot field isn’t in any single waveform. It’s the way every system—pointer energy, ripple queues, effect envelopes, camera interpolation—leans toward empathy. The animation listens to you, interprets your inputs like a jazz pianist riffing on a theme, and gives each mode a chance to shine without crowding the stage.</p>\n<p>Or, to borrow an analogy from the kitchen: this piece is less a recipe and more a well-seasoned cast iron skillet. Each layer of math and polish is a seasoning that makes the next performance taste better. Whether you’re dropping into Zen Mode for meditative drift or firing up Jitter for fireworks, the pan is ready, warm, and welcoming—like a trusted family instrument that only gets sweeter with each jam.</p>\n<h2>Future Improvisations (Tech Notes)</h2>\n<ul>\n<li><strong>GPU instancing for richer sprites.</strong> Experiment with instanced quads and a tiny texture atlas so certain modes can introduce comet tails or hex particles without tanking fill rate.</li>\n<li><strong>WebGL 2 framebuffers.</strong> Render secondary simulations (reaction diffusion, velocity fields) into framebuffers once per frame, then sample them in the main shader to reduce CPU-to-GPU chatter.</li>\n<li><strong>Audio-reactive hooks.</strong> Pipe Web Audio API FFT data into the influence map so bass hits can trigger ripple bursts or modulation envelopes.</li>\n<li><strong>Adaptive grid density.</strong> Scale <code>AMOUNTX</code>/<code>AMOUNTY</code> and <code>SEPARATION</code> based on device performance metrics, keeping low-power hardware smooth while letting desktops enjoy denser fields.</li>\n<li><strong>Gesture memories.</strong> Record recent pointer paths in a trailing buffer so the field can replay your last 10 seconds of interaction as a ghost overlay when you go idle.</li>\n<li><strong>Editor UX polish.</strong> Extend the admin presets with inline sparklines previewing waveforms so curators can “hear” the mode before it plays.</li>\n</ul>\n<p>So enjoy the show, and when you craft the next effect, remember—you’re not just moving pixels. You’re inviting the dots to dance.</p>",
        "ja": "<h1>ドットフィールドの隠された振付</h1>\n<p>プラネタリウムの星座が天井を無視して自分の周りを回り、重力のささやきを動きで伝えてくる——ホームページのドットフィールドは、そんな感覚を届けるために設計されています。シェーダーの数学、応答性の高い振付、見る人への共感を同じ比率で混ぜ込んだパフォーマンスです。</p>\n<h2>舞台裏を支えるキャスト</h2>\n<ul>\n<li><strong>SceneCanvas</strong>（<code>components/SceneCanvas.jsx</code>）は舞台監督と照明を兼任。90ユニット間隔の70×70点（計4,900）グリッドを生成し、その動きをカスタム<code>THREE.Points</code>シェーダーに渡します。各ドットは<code>gl_PointCoord</code>や加算合成、輝度とサイズのユニフォームを使って柔らかな円盤として描画されます。</li>\n<li><strong>FIELD_DEFAULT_BASE</strong>（<code>lib/fieldDefaults.js</code>）は波の周波数、リップル減衰、渦の強さ、ポイントサイズ、フォグ密度など“ハウスバンド”の初期設定を定義します。エフェクト終了後に戻る基準値です。</li>\n<li><strong>FIELD_DEFAULT_INFLUENCES</strong>はチャンネルごとの味付け。<code>/projects</code>や<code>/sounds</code>に遷移してもアニメーション全体は変えず、グリッドのムードをコンテンツに合わせて調律します。</li>\n<li><strong>SceneCanvasのステートマシン</strong>はポインターのエネルギー、リップルキュー、モード固有データ、デスクトップ／モバイルのカメラ設定を監視。次に響かせるセクションを把握した指揮者のスコアのように全体を統率します。</li>\n</ul>\n<h2>動きの仕組み</h2>\n<p>ドットフィールドの土台には3つのサイン波が重なっています。X軸を進む波、Y軸にオフセットされた波、そしてグリッドを包む放射状の渦。潮の満ち引きと龍の呼吸を足したようなリズムが生まれ、その上に以下の要素が加わります。</p>\n<ul>\n<li>ポインターの動きはワールド座標に変換され、ライブエネルギーメーターに蓄積。急な操作でエネルギーが跳ね上がり、停止すると<code>pointer.energy = pointer.energy * 0.92 - 0.002</code>で減衰します。スケートボードで滑らかにカービングするほど勢いが続く感覚に近いです。</li>\n<li>クリックすると指数関数的に減衰するリップルをキューに追加。各リップルは年齢・距離・強度を追跡し、8秒後に消えます。池に小石を投げ入れた波紋や、ゴングの余韻が溶ける様子を想像してください。</li>\n<li>カメラは穏やかな自動操縦でポインター方向へ lerp。係数0.04〜0.045の滑らかな追従で、ステディカムが次のビートを予感するような移動になります。</li>\n</ul>\n<h2>エフェクトライブラリ：9つの別宇宙</h2>\n<p>Zen、Jitter、Reaction Diffusion、Starfield、Harmonic Pendulum、Mandelbrot Zoomなど複数のエフェクト定義を収録し、発動すると4つのフェーズが走ります。</p>\n<ol>\n<li><strong>init</strong>：ペンデュラム角やグレイ・スコットバッファなどモード固有メモリを初期化。</li>\n<li><strong>start</strong>：明るさや振幅、リップル挙動といったグローバル設定を再調整。</li>\n<li><strong>update</strong>：各フレームで固有状態を進行させます。</li>\n<li><strong>perPoint</strong>：粒子ごとのオフセット、スケール、ライティングを注入。</li>\n</ol>\n<p>ゲスト指揮者がスコアを解釈し直すように、各モードが同じテーマを独自に奏でます。Harmonic Pendulumは3つの二重振り子を合算してカオティックな波を生成し、River Runは斜めのサイン波とフラクタルノイズで渦流を描きます。Starfieldはドットを擬似Z軸に浮かせ星雲のように瞬かせ、Mandelbrot Zoomは32回の反復で境界線を呼吸のように膨張させます。</p>\n<h2>滑らかさの秘密</h2>\n<p>なめらかな体感は複数のイージング判断から生まれます。</p>\n<ul>\n<li><strong>ターゲット値とライブ値</strong>：<code>settings[key] += (targetSettings[key] - settings[key]) * 0.05</code>で徐々に近づけ、スイッチではなくフェーダーで照明を調整するような変化に。</li>\n<li><strong>随所に仕込んだエンベロープ</strong>：<code>smoothStep</code>や独自の<code>computeEffectEase</code>でフェードイン・アウトを制御。エンディングは合唱曲のコーダのように柔らかく閉じます。</li>\n<li><strong>ポインター減衰</strong>：操作中は勢いが生まれ、止めると砂のように静まる指数減衰で、自然な手触りを維持。</li>\n<li><strong>遅延クリア</strong>：時間指定の効果が終わると2.5秒かけて寄与を減衰させ、UIのトランジションと足並みを揃えます。</li>\n<li><strong>レスポンシブカメラ</strong>：デスクトップとモバイルで軌道を切り替え、<code>matchMedia('(max-width: 640px)')</code>が即座にプロファイルを交換します。</li>\n</ul>\n<h2>ビジュアルチューニングと読みやすさ</h2>\n<ul>\n<li>シェーダーは1/4半径の外側を捨て、<code>smoothstep</code>で縁を柔らかく。レトロCRTのような柔光を得つつブロックノイズを回避します。</li>\n<li>色はグレースケールながら、高さに応じてコントラストと明度を変化。波頭に近いドットほど大きく明るくなり、ダンサーを追うスポットライトのようです。</li>\n<li>加算合成とReinhardトーンマッピングでハイライトを伸ばしつつ中間調を維持。囁き声とシャウトが共存する音楽の圧縮に似ています。</li>\n<li><code>prefers-reduced-motion</code>を尊重し、読み込み時は安定状態へ即座に遷移してフラッシュを防ぎます。</li>\n</ul>\n<h2>ビジュアルのヒント</h2>\n<ul>\n<li>俯瞰から基本グリッドを撮影し、X/Y波の層を等高線のように注釈。</li>\n<li>リップルの伝播をGIFで記録し、水面の同心円図を重ねて解説。</li>\n<li>エフェクトメニューを「ゲスト指揮者」のポスターに見立て、モードと波形アイコンを並置。</li>\n<li>標準ビューと<code>prefers-reduced-motion</code>版を並べ、共感的な読み込み経路を示します。</li>\n</ul>\n<h2>共有したい技術メモ</h2>\n<ul>\n<li>Perlinの置換テーブルは512エントリを事前計算し、River Runのような流れのある効果を毎フレームの割り当てなしで駆動。</li>\n<li>リップルキューは20件で上限を設け、古いものは8秒後に消去して長時間でも負荷を安定化。</li>\n<li><code>frustumCulled = false</code>で極端なカメラ角度でもグリッドが突然消えないようにしています。</li>\n<li>Stats.jsのフックは通常非表示ですが、モード調整時にはすぐ呼び出せる状態で待機。</li>\n<li>初期化直後（あるいはモーション削減ユーザー向けには即座に）<code>.is-ready</code>クラスを付与し、CSSのアニメーションとWebGLの準備完了を同期させます。</li>\n</ul>\n<h2>なぜ心地よく感じるのか</h2>\n<p>ドットフィールドの魔法は特定の波形ではなく、ポインターエネルギーやリップル、エフェクトの包絡線、カメラ補間といったシステム全体が共感に傾いている点にあります。ジャズピアニストがテーマを変奏するように、ユーザーの入力を解釈して各モードが輝く余白を確保します。</p>\n<p>料理で言えばレシピではなく、使い込まれた鋳鉄フライパン。数学と磨き上げた手触りが何層にも重なり、次の演奏をもっと豊かにします。Zenモードで瞑想的に漂う時も、Jitterで花火を咲かせる時も、このパンは常に温かく招き入れてくれます。</p>\n<h2>これから試したい改良案</h2>\n<ul>\n<li><strong>GPUインスタンシング</strong>：小さなテクスチャアトラスを用いたインスタンス描画で、光尾や六角形パーティクルを低コストに追加。</li>\n<li><strong>WebGL2フレームバッファ</strong>：副次的なシミュレーションをフレームバッファにキャッシュし、メインシェーダーがサンプリングする構成でCPUとGPU間の往復を削減。</li>\n<li><strong>オーディオリアクティブ化</strong>：Web Audio APIのFFTデータをインフルエンスマップに流し込み、低音でリップルを発火させるなど音との連携を強化。</li>\n<li><strong>グリッド密度の適応制御</strong>：端末性能に応じて<code>AMOUNTX</code>/<code>AMOUNTY</code>や<code>SEPARATION</code>を調整し、ローエンド機でも滑らかさを維持しつつデスクトップでは密度を上げる。</li>\n<li><strong>ジェスチャーの記憶</strong>：直近10秒のポインター軌跡をバッファに保持し、アイドル時にゴーストとして再生。</li>\n<li><strong>エディタUXの磨き込み</strong>：プリセット一覧にスパークラインを添えて波形を視覚化し、再生前の「試聴」をできるようにする。</li>\n</ul>\n<p>次のエフェクトを仕立てるときは、単にピクセルを動かすのではなく、この小さな点たちを踊りに誘っているのだと意識してください。</p>"
      },
      "tags": {
        "en": [
          "generative art",
          "shader",
          "dot field"
        ],
        "ja": [
          "ジェネレーティブアート",
          "シェーダー",
          "ドットフィールド"
        ]
      },
      "coverImage": null,
      "status": "published",
      "createdAt": "2024-12-15"
    }
  ]
}